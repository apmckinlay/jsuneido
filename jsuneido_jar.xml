<?xml version="1.0" encoding="UTF-8" standalone="no"?>


<project default="jar-final-nojsdi" name="Make runnable jSuneido JAR">

	<!--                      -->
	<!-- REUSEABLE REFERENCES -->
	<!--                      -->

	<property name="lib.dir" value="lib"/>
	<property name="lib.lucene-core" value="lucene-core-4.8.1.jar"/>
	<property name="lib.lucene-analyzers-common" value="lucene-analyzers-common-4.8.1.jar"/>
	<property name="lib.lucene-queryparser" value="lucene-queryparser-4.8.1.jar"/>

	<property name="main.srcdir" value="src/main/java"/>
	<property name="main.destdir" value="target/classes"/>
	<path id="main.classpath">
		<pathelement location="${lib.dir}/asm-all-5.0.2.jar"/>
		<pathelement location="${lib.dir}/guava-17.0.jar"/>
		<pathelement location="${lib.dir}/jsr305-1.3.9.jar"/>
		<pathelement location="${lib.dir}/${lib.lucene-core}"/>
		<pathelement location="${lib.dir}/${lib.lucene-analyzers-common}"/>
		<pathelement location="${lib.dir}/${lib.lucene-queryparser}"/>
		<pathelement location="${lib.dir}/trove-3.0.3.jar"/>
	</path>

	<property name="jar.manifest.classpath" value="${lib.lucene-core} ${lib.lucene-analyzers-common} ${lib.lucene-queryparser}"/>
	<property name="jar.name.prefix" value="jsuneido"/>
	<property name="jar.name.suffix-final" value=".jar"/>
	<property name="jar.name.suffix-raw" value="-raw.jar"/>

	<patternset id="main.base.classes">
		<include name="**/*.class*"/>
		<exclude name="**/jsdi/tools/**"/>
		<exclude name="**/jsdi/suneido_protocol/**"/>
		<exclude name="**/jsdi/abi/**"/>
	</patternset>

	<patternset id="jsdi.extra.classes">
		<include name="**/jsdi/suneido_protocol/**"/>
	</patternset>

	<!--         -->
	<!-- TARGETS -->
	<!--         -->

	<target name="build-all" depends="jar-final-nojsdi,jar-final-amd64,jar-final-x86"/>

	<target name="rebuild-all" depends="clean-all,build-all"/>

	<target name="jar-raw-nojsdi" depends="compile"
	        description="Create raw JAR without JSDI support"
	>
		<jar destfile="${jar.name.prefix}${jar.name.suffix-raw}" filesetmanifest="mergewithoutmain">
			<manifest>
				<attribute name="Main-Class" value="suneido.boot.Bootstrap"/>
				<attribute name="Class-Path" value="${jar.manifest.classpath}"/>
			</manifest>
			<fileset dir="${main.destdir}">
				<patternset refid="main.base.classes"/>
			</fileset>
		</jar>
	</target>

	<target name="jar-final-nojsdi" depends="jar-raw-nojsdi"
	        description="Create final optimized JAR without JSDI support"
	>
		<java jar="${lib.dir}/proguard.jar" fork="true">
			<arg value="-injars ${jar.name.prefix}${jar.name.suffix-raw}"/>
			<arg value="@jsuneido.pro"/>
			<arg value="@jsuneido-nojsdi.pro"/>
			<arg value="-outjars ${jar.name.prefix}${jar.name.suffix-final}"/>
		</java>
	</target>

	<target name="jar-raw-amd64" depends="compile"
	        description="Create raw JAR with JSDI for AMD64"
	>
		<jar destfile="${jar.name.prefix}-amd64${jar.name.suffix-raw}" filesetmanifest="mergewithoutmain">
			<manifest>
				<attribute name="Main-Class" value="suneido.Suneido"/>
				<attribute name="Class-Path" value="${jar.manifest.classpath}"/>
			</manifest>
			<fileset dir="${main.destdir}">
				<patternset refid="main.base.classes"/>
			</fileset>
			<fileset dir="${main.destdir}">
				<patternset refid="jsdi.extra.classes"/>
			</fileset>
			<fileset dir="${main.destdir}">
				<include name="**/jsdi/abi/amd64/**"/>
			</fileset>
			<fileset dir=".">
				<include name="${lib.dir}/amd64/**"/>
			</fileset>
		</jar>
	</target>

	<target name="jar-final-amd64" depends="jar-raw-amd64"
	        description="Create final optimized JAR with JSDI for AMD64"
	>
		<java jar="${lib.dir}/proguard.jar" fork="true">
			<arg value="-injars ${jar.name.prefix}-amd64${jar.name.suffix-raw}"/>
			<arg value="@jsuneido.pro"/>
			<arg value="@jsuneido-jsdi-amd64.pro"/>
			<arg value="-outjars ${jar.name.prefix}-amd64${jar.name.suffix-final}"/>
		</java>
	</target>

	<target name="jar-raw-x86" depends="compile"
	        description="Create raw JAR with JSDI for x86"
	>
		<jar destfile="${jar.name.prefix}-x86${jar.name.suffix-raw}" filesetmanifest="mergewithoutmain">
			<manifest>
				<attribute name="Main-Class" value="suneido.Suneido"/>
				<attribute name="Class-Path" value="${jar.manifest.classpath}"/>
			</manifest>
			<fileset dir="${main.destdir}">
				<patternset refid="main.base.classes"/>
			</fileset>
			<fileset dir="${main.destdir}">
				<patternset refid="jsdi.extra.classes"/>
			</fileset>
			<fileset dir="${main.destdir}">
				<include name="**/jsdi/abi/x86/**"/>
			</fileset>
			<fileset dir=".">
				<include name="${lib.dir}/x86/**"/>
			</fileset>
		</jar>
	</target>

	<target name="jar-final-x86" depends="jar-raw-x86"
	        description="Create final optimized JAR with JSDI for x86"
	>
		<java jar="${lib.dir}/proguard.jar" fork="true">
			<arg value="-injars ${jar.name.prefix}-x86${jar.name.suffix-raw}"/>
			<arg value="@jsuneido.pro"/>
			<arg value="@jsuneido-jsdi-x86.pro"/>
			<arg value="-outjars ${jar.name.prefix}-x86${jar.name.suffix-final}"/>
		</java>
	</target>

	<target name="when_built">
		<tstamp>
			<format property="WHEN" pattern="MMM d yyyy HH:mm:ss" locale="ENGLISH, CANADA"/>
		</tstamp>
		<echo file="${main.srcdir}/suneido/WhenBuilt.java">
			// do not edit - generated by jsuneido_jar.xml
			package suneido;
			public class WhenBuilt {
				public static String when() {
					return "${WHEN} (Java)";
				}
			}
		</echo>
	</target>

	<target name="compile" depends="when_built"
			description="Compile main source files"
	>
		<mkdir dir="${main.destdir}"/>
		<javac srcdir="${main.srcdir}" destdir="${main.destdir}"
				classpathref="main.classpath"
				includeAntRuntime="false"
				target="1.8"
				debug="true"
		>
			<!--  Exclude JDBC stuff. Not currently implemented. -->
			<exclude name="**/jdbc/**"/>
			<!-- TODO: Refactor this build file so there are targets to -->
			<!--       a debugging version (containing debug symbols) -->
			<!--       and for building a 'release' version without them. -->
		</javac>
	</target>

	<target name="clean-jar-nojsdi">
		<delete file="${jar.name.prefix}${jar.name.suffix-raw}"/>
		<delete file="${jar.name.prefix}${jar.name.suffix-final}"/>
	</target>

	<target name="clean-jar-amd64">
		<delete file="${jar.name.prefix}-amd64${jar.name.suffix-raw}"/>
		<delete file="${jar.name.prefix}-amd64${jar.name.suffix-final}"/>
	</target>

	<target name="clean-jar-x86">
		<delete file="${jar.name.prefix}-x86${jar.name.suffix-raw}"/>
		<delete file="${jar.name.prefix}-x86${jar.name.suffix-final}"/>
	</target>

	<target name="clean-jars" depends="clean-jar-nojsdi,clean-jar-amd64,clean-jar-x86"/>

	<target name="clean-classes" description="Delete compiled class files">
		<delete dir="${main.destdir}"/>
	</target>

	<target name="clean-all" depends="clean-classes,clean-jars"/>
</project>
